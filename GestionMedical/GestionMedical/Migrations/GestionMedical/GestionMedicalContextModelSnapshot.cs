// <auto-generated />
using System;
using GestionMedical.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionMedical.Migrations.GestionMedical
{
    [DbContext(typeof(GestionMedicalContext))]
    partial class GestionMedicalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionMedical.Models.Consultation", b =>
                {
                    b.Property<int>("ConsultationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultationId"));

                    b.Property<string>("Ordonnance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrdreMedical")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("RendezVousId")
                        .HasColumnType("int");

                    b.Property<string>("Resultat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConsultationId")
                        .HasName("PK__Consulta__5D014A98BFD65BE3");

                    b.HasIndex("RendezVousId");

                    b.ToTable("Consultation", (string)null);
                });

            modelBuilder.Entity("GestionMedical.Models.DossierMedical", b =>
                {
                    b.Property<int>("DossierMedicalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DossierMedicalId"));

                    b.Property<int?>("ConsultationId")
                        .HasColumnType("int");

                    b.Property<int?>("MedecinId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("DossierMedicalId")
                        .HasName("PK__DossierM__19050E45D417C5A4");

                    b.HasIndex("ConsultationId");

                    b.HasIndex("MedecinId");

                    b.HasIndex("PatientId");

                    b.ToTable("DossierMedical", (string)null);
                });

            modelBuilder.Entity("GestionMedical.Models.Medecin", b =>
                {
                    b.Property<int>("MedecinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedecinId"));

                    b.Property<DateOnly?>("DateRetour")
                        .HasColumnType("date");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specialite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MedecinId")
                        .HasName("PK__Medecin__69D27AFB3CD03740");

                    b.ToTable("Medecin", (string)null);
                });

            modelBuilder.Entity("GestionMedical.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime");

                    b.Property<int>("MedecinId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("NotificationId")
                        .HasName("PKNotific4E3E04AD7882750B");

                    b.HasIndex("MedecinId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("GestionMedical.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Adresse")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("DateNaissance")
                        .HasColumnType("date");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("PatientId")
                        .HasName("PK__Patient__970EC366A7AAEC07");

                    b.ToTable("Patient", (string)null);
                });

            modelBuilder.Entity("GestionMedical.Models.PersonnelMedical", b =>
                {
                    b.Property<int>("PersonnelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonnelId"));

                    b.Property<string>("Fonction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PersonnelId")
                        .HasName("PK__Personne__CAFBCB4FE8DEC8B9");

                    b.ToTable("PersonnelMedical", (string)null);
                });

            modelBuilder.Entity("GestionMedical.Models.RendezVou", b =>
                {
                    b.Property<int>("RendezVousId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RendezVousId"));

                    b.Property<DateTime>("DateHeure")
                        .HasColumnType("datetime");

                    b.Property<int?>("MedecinId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.HasKey("RendezVousId")
                        .HasName("PK__RendezVo__C4B748C7D003D9D7");

                    b.HasIndex("MedecinId");

                    b.HasIndex("PatientId");

                    b.ToTable("RendezVous");
                });

            modelBuilder.Entity("GestionMedical.Models.Consultation", b =>
                {
                    b.HasOne("GestionMedical.Models.RendezVou", "RendezVous")
                        .WithMany("Consultations")
                        .HasForeignKey("RendezVousId")
                        .HasConstraintName("FK__Consultat__Rende__440B1D61");

                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("GestionMedical.Models.DossierMedical", b =>
                {
                    b.HasOne("GestionMedical.Models.Consultation", "Consultation")
                        .WithMany("DossierMedicals")
                        .HasForeignKey("ConsultationId")
                        .HasConstraintName("FK__DossierMe__Consu__49C3F6B7");

                    b.HasOne("GestionMedical.Models.Medecin", "Medecin")
                        .WithMany("DossierMedicals")
                        .HasForeignKey("MedecinId")
                        .HasConstraintName("FK__DossierMe__Medec__48CFD27E");

                    b.HasOne("GestionMedical.Models.Patient", "Patient")
                        .WithMany("DossierMedicals")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK__DossierMe__Patie__47DBAE45");

                    b.Navigation("Consultation");

                    b.Navigation("Medecin");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("GestionMedical.Models.Notification", b =>
                {
                    b.HasOne("GestionMedical.Models.Medecin", "Medecin")
                        .WithMany("Notifications")
                        .HasForeignKey("MedecinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKNotificMedec__51F18345");

                    b.Navigation("Medecin");
                });

            modelBuilder.Entity("GestionMedical.Models.RendezVou", b =>
                {
                    b.HasOne("GestionMedical.Models.Medecin", "Medecin")
                        .WithMany("RendezVous")
                        .HasForeignKey("MedecinId")
                        .HasConstraintName("FK__RendezVou__Medec__3F466844");

                    b.HasOne("GestionMedical.Models.Patient", "Patient")
                        .WithMany("RendezVous")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK__RendezVou__Patie__3E52440B");

                    b.Navigation("Medecin");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("GestionMedical.Models.Consultation", b =>
                {
                    b.Navigation("DossierMedicals");
                });

            modelBuilder.Entity("GestionMedical.Models.Medecin", b =>
                {
                    b.Navigation("DossierMedicals");

                    b.Navigation("Notifications");

                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("GestionMedical.Models.Patient", b =>
                {
                    b.Navigation("DossierMedicals");

                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("GestionMedical.Models.RendezVou", b =>
                {
                    b.Navigation("Consultations");
                });
#pragma warning restore 612, 618
        }
    }
}
